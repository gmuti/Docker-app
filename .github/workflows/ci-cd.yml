name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-push-docker:
    runs-on: ubuntu-latest

    steps:
      # Étape 1 : Vérifier le dépôt
      - name: Checkout code
        uses: actions/checkout@v3
        id: checkout

      # Étape 2 : Configurer Node.js et installer les dépendances
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      # Étape 3 : Build de l'application Angular
      - name: Build Angular Application
        run: npm run build -- --configuration production

      # Étape 4 : Authentification dans GitHub Container Registry
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Étape 5 : Configurer Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Étape 6 : Définir un nom d'image dynamique (en minuscules)
      - name: Define image name
        id: image-name
        run: |
          IMAGE_NAME=$(echo "gedemo/docker-app" | tr '[:upper:]' '[:lower:]')
          echo "IMAGE_NAME=${IMAGE_NAME}:${{ github.sha }}" >> $GITHUB_ENV

      # Étape 7 : Build et Push de l'image Docker avec cache
      - name: Build and Push Docker Image to GitHub Container Registry
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: ${{ env.IMAGE_NAME }}
          cache-from: type=gha,ref=${{ env.IMAGE_NAME }}-cache
          cache-to: type=gha,ref=${{ env.IMAGE_NAME }}-cache,mode=max
